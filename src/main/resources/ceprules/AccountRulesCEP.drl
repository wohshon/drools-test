package ceprules;
import com.redhat.app.model.Account;
import com.redhat.app.model.OrdinaryAccount;
import com.redhat.app.model.SpecialAccount;
import com.redhat.app.model.Customer;
import com.redhat.app.model.events.Transaction;

declare Transaction
  @role( event )
  @timestamp( timestamp )
  //@duration( callDuration )
  //@expires( 1h35m )
  @expires( 30m )
end

declare PotentialFraudFact 
	account: Account
	transactions: java.util.ArrayList
end

//rule "multiple ATM transactions within 10 mins "
rule "multiple ATM transactions within 10 mins at different locations"
when
 accumulate (
  $tx : Transaction( $ts: timestamp) over window:time (10m) from entry-point "ATM Stream";
    $nrOfTransactions : count($tx), 		$list: collectList($tx);
    $nrOfTransactions >= 2  
 )
 
	$t1: Transaction() from $list

	$t2: Transaction(
      this != $t1, 
      this.getCustomer().getAccount().getAccountId().equals($t1.getCustomer().getAccount().getAccountId()), 
      !this.getLocation().equals($t1.getLocation()),
      this after[0s, 10s] $t1 
      ) from $list	   

then 
  System.out.println("\nDetected potential fraud for the following activities: ");
  System.out.println("ATM tx1 : "+$t1);
  System.out.println("ATM tx2 : "+$t2);
	PotentialFraudFact potentialFraud = new PotentialFraudFact();
	potentialFraud.setTransactions(new java.util.ArrayList());
	potentialFraud.getTransactions().add($t1);
	potentialFraud.getTransactions().add($t2);
  delete($t1);
  delete($t2);
	insert(potentialFraud);
end

rule "Found potential fraud"
when
	exists PotentialFraudFact()
	$p : PotentialFraudFact()
then
	System.out.println("!!!! Registered fraud event!!!!\n");
  System.out.println("ATM activity at 2 locations detected for account:  "+ ((Transaction)$p.getTransactions().get(0)).getCustomer().getAccount().getAccountId()+"\n");
	
  $p = null;
end


//dummy rules for testing

rule "Audit Rule 1"
when
  $t :Transaction($cu: customer, $intrate: customer.account#OrdinaryAccount.yearlyInterest>0, $amt : amount > 10) from entry-point "ATM Stream"
then
  System.out.println("audit rule 1 "+$cu.getAccount().getAccountId());
  //System.out.println("acct: "+$t.getCustomer().getAccount().getAccountId());

end

rule "Audit Rule 2"
when
  Transaction($cu: customer, $amt : amount < 10) from entry-point "ATM Stream"
then
  System.out.println("audit rule 2 "+$cu.getAccount().getAccountId());
  //System.out.println("acct: "+$t.getCustomer().getAccount().getAccountId());
end
