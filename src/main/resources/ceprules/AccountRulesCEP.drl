package ceprules;
import com.redhat.app.model.Account;
import com.redhat.app.model.OrdinaryAccount;
import com.redhat.app.model.SpecialAccount;
import com.redhat.app.model.Customer;
import com.redhat.app.model.events.Transaction;

declare Transaction
  @role( event )
  @timestamp( timestamp )
  //@duration( callDuration )
  //@expires( 1h35m )
  @expires( 1m )
end

rule "Authorize Withdraw"
when
  //Transaction($cu : customer.account#OrdinaryAccount.yearlyInterest>0, $amt : amount > 10) //from entry-point "ATM Stream"
  //Transaction(  ) from entry-point "ATM Stream"
  //ok
  //  Transaction(  )
Transaction($cu : customer.account#OrdinaryAccount.yearlyInterest>0, $amt : amount > 10) from entry-point "ATM Stream"
then
  // authorize withdraw
  System.out.println("ok");
end

rule "Authorize Withdraw test"
when
  //Transaction($cu : customer.account#OrdinaryAccount.yearlyInterest>0, $amt : amount > 10) //from entry-point "ATM Stream"
  //Transaction(  ) from entry-point "ATM Stream"
  //ok
  //  Transaction(  )
  Transaction( $amt : amount < 10) from entry-point "ATM Stream"
then
  // authorize withdraw
  System.out.println("Not ok");
end